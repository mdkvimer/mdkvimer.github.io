<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 起步于308的小菜菜]]></title>
  <link href="http://mdkvimer.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://mdkvimer.github.io/"/>
  <updated>2013-05-23T13:03:18+08:00</updated>
  <id>http://mdkvimer.github.io/</id>
  <author>
    <name><![CDATA[mdkvimer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[myvimrc]]></title>
    <link href="http://mdkvimer.github.io/blog/2013/05/19/myvimrc/"/>
    <updated>2013-05-19T18:55:00+08:00</updated>
    <id>http://mdkvimer.github.io/blog/2013/05/19/myvimrc</id>
    <content type="html"><![CDATA[<p>my vimrc</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (myvimrc)</span> <a href='/downloads/code/myvimrc'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set syntax=on
</span><span class='line'>
</span><span class='line'>set noeb
</span><span class='line'>
</span><span class='line'>set confirm
</span><span class='line'>
</span><span class='line'>set autoindent
</span><span class='line'>set cindent
</span><span class='line'>
</span><span class='line'>set tabstop=4
</span><span class='line'>
</span><span class='line'>set softtabstop=4
</span><span class='line'>set shiftwidth=4
</span><span class='line'>
</span><span class='line'>set noexpandtab
</span><span class='line'>
</span><span class='line'>set smarttab
</span><span class='line'>
</span><span class='line'>set number
</span><span class='line'>set history=1000
</span><span class='line'>
</span><span class='line'>set nobackup
</span><span class='line'>set noswapfile
</span><span class='line'>
</span><span class='line'>set ignorecase
</span><span class='line'>
</span><span class='line'>set hlsearch
</span><span class='line'>set incsearch
</span><span class='line'>
</span><span class='line'>set gdefault
</span><span class='line'>
</span><span class='line'>set enc=utf-8
</span><span class='line'>set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
</span><span class='line'>
</span><span class='line'>set langmenu=zh_CN.UTF-8
</span><span class='line'>set helplang=cn
</span><span class='line'>
</span><span class='line'>set statusline=%F%m%r%h%w\ <span class="cp">[</span><span class="n">FORMAT</span><span class="o">=%</span><span class="p">{</span><span class="o">&amp;</span><span class="nx">ff</span><span class="p">}</span><span class="cp">]</span>\ <span class="cp">[</span><span class="k">TYPE</span><span class="o">=%</span><span class="nx">Y</span><span class="cp">]</span>\ <span class="cp">[</span><span class="n">POS</span><span class="o">=%</span><span class="nx">l</span><span class="p">,</span><span class="o">%</span><span class="nx">v</span><span class="cp">][</span><span class="o">%</span><span class="nx">p</span><span class="o">%%</span><span class="cp">]</span>\ %{strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)}
</span><span class='line'>
</span><span class='line'>set laststatus=2
</span><span class='line'>
</span><span class='line'>set ruler
</span><span class='line'>
</span><span class='line'>set cmdheight=2
</span><span class='line'>
</span><span class='line'>filetype on
</span><span class='line'>
</span><span class='line'>filetype plugin on
</span><span class='line'>
</span><span class='line'>filetype indent on
</span><span class='line'>
</span><span class='line'>set viminfo+=!
</span><span class='line'>
</span><span class='line'>set iskeyword+=_,$,@,%,#,-
</span><span class='line'>
</span><span class='line'>set linespace=0
</span><span class='line'>
</span><span class='line'>set wildmenu
</span><span class='line'>
</span><span class='line'>set backspace=2
</span><span class='line'>
</span><span class='line'>set whichwrap+=<span class="err">&lt;</span>,&gt;,h,l
</span><span class='line'>
</span><span class='line'>set mouse=a
</span><span class='line'>set selection=exclusive
</span><span class='line'>set selectmode=mouse,key
</span><span class='line'>
</span><span class='line'>set report=0
</span><span class='line'>
</span><span class='line'>set shortmess=atI
</span><span class='line'>
</span><span class='line'>set fillchars=vert:\ ,stl:\ ,stlnc:\
</span><span class='line'>
</span><span class='line'>set showmatch
</span><span class='line'>
</span><span class='line'>set matchtime=5
</span><span class='line'>
</span><span class='line'>set scrolloff=3
</span><span class='line'>
</span><span class='line'>set smartindent
</span><span class='line'>
</span><span class='line'>if has(&quot;autocmd&quot;)
</span><span class='line'>   autocmd FileType xml,html,c,cs,java,perl,shell,bash,cpp,python,vim,php,ruby set number
</span><span class='line'>   autocmd FileType xml,html vmap <span class="nt">&lt;C</span><span class="na">-o</span><span class="nt">&gt;</span> <span class="nt">&lt;ESC&gt;</span>&#39;<span class="nt">&lt;i</span><span class="err">&lt;!</span><span class="na">--</span><span class="err">&lt;</span><span class="na">ESC</span><span class="nt">&gt;</span>o<span class="nt">&lt;ESC&gt;</span>&#39;&gt;o--&gt;
</span><span class='line'>   autocmd FileType java,c,cpp,cs vmap <span class="nt">&lt;C</span><span class="na">-o</span><span class="nt">&gt;</span> <span class="nt">&lt;ESC&gt;</span>&#39;<span class="nt">&lt;o</span><span class="err">/*&lt;</span><span class="na">ESC</span><span class="nt">&gt;</span>&#39;&gt;o*/
</span><span class='line'>   autocmd FileType html,text,php,vim,c,java,xml,bash,shell,perl,python setlocal textwidth=100
</span><span class='line'>   autocmd Filetype html,xml,xsl source $VIMRUNTIME/plugin/closetag.vim
</span><span class='line'>   autocmd BufReadPost *
</span><span class='line'>      \ if line(&quot;&#39;\&quot;&quot;) &gt; 0 <span class="err">&amp;&amp;</span> line(&quot;&#39;\&quot;&quot;) <span class="err">&lt;</span>= line(&quot;$&quot;) |
</span><span class='line'>      \   exe &quot;normal g`\&quot;&quot; |
</span><span class='line'>      \ endif
</span><span class='line'>endif &quot; has(&quot;autocmd&quot;)
</span><span class='line'>
</span><span class='line'>map <span class="nt">&lt;F5&gt;</span> :call CompileRunGcc()<span class="nt">&lt;CR&gt;</span>
</span><span class='line'>func! CompileRunGcc()
</span><span class='line'>exec &quot;w&quot;
</span><span class='line'>exec &quot;!gcc % -o %<span class="err">&lt;</span>&quot;
</span><span class='line'>exec &quot;! ./%<span class="err">&lt;</span>&quot;
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>map <span class="nt">&lt;F6&gt;</span> :call CompileRunGpp()<span class="nt">&lt;CR&gt;</span>
</span><span class='line'>func! CompileRunGpp()
</span><span class='line'>exec &quot;w&quot;
</span><span class='line'>exec &quot;!g++ % -o %<span class="err">&lt;</span>&quot;
</span><span class='line'>exec &quot;! ./%<span class="err">&lt;</span>&quot;
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>map <span class="nt">&lt;F7&gt;</span> :w<span class="nt">&lt;cr&gt;</span>:!python %<span class="nt">&lt;cr&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>map <span class="nt">&lt;F8&gt;</span> :call CompileRunSH()<span class="nt">&lt;CR&gt;</span>
</span><span class='line'>func! CompileRunSH()
</span><span class='line'>exec &quot;w&quot;
</span><span class='line'>exec &quot;!chmod u+x %&quot;
</span><span class='line'>exec &quot;!./%&quot;
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>map <span class="nt">&lt;F9&gt;</span> :call Debug()<span class="nt">&lt;CR&gt;</span>
</span><span class='line'>func!  Debug()
</span><span class='line'>exec &quot;w&quot;
</span><span class='line'>exec &quot;!gcc % -o %<span class="err">&lt;</span> -gstabs+&quot;
</span><span class='line'>exec &quot;!gdb %<span class="err">&lt;</span>&quot;
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>set encoding=utf-8
</span><span class='line'>function! SetFileEncodings(encodings)
</span><span class='line'>    let b:myfileencodingsbak=<span class="err">&amp;</span>fileencodings
</span><span class='line'>    let <span class="err">&amp;</span>fileencodings=a:encodings
</span><span class='line'>endfunction
</span><span class='line'>function! RestoreFileEncodings()
</span><span class='line'>    let <span class="err">&amp;</span>fileencodings=b:myfileencodingsbak
</span><span class='line'>    unlet b:myfileencodingsbak
</span><span class='line'>endfunction
</span><span class='line'>
</span><span class='line'>au BufReadPre *.nfo call SetFileEncodings(&#39;cp437&#39;)|set ambiwidth=single
</span><span class='line'>au BufReadPost *.nfo call RestoreFileEncodings()
</span><span class='line'>
</span><span class='line'>au BufRead,BufNewFile *  setfiletype txt
</span><span class='line'>
</span><span class='line'>set foldenable
</span><span class='line'>set foldmethod=manual
</span><span class='line'>nnoremap <span class="nt">&lt;space&gt;</span> @=((foldclosed(line(&#39;.&#39;)) <span class="nt">&lt; 0</span><span class="err">)</span> <span class="err">?</span> <span class="err">&#39;</span><span class="na">zc</span><span class="err">&#39;</span> <span class="na">:</span> <span class="err">&#39;</span><span class="na">zo</span><span class="err">&#39;)&lt;</span><span class="na">CR</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>let g:miniBufExplMapWindowNavVim = 1
</span><span class='line'>let g:miniBufExplMapWindowNavArrows = 1
</span><span class='line'>let g:miniBufExplMapCTabSwitchBufs = 1
</span><span class='line'>let g:miniBufExplModSelTarget = 1
</span><span class='line'>:colorscheme evening
</span><span class='line'>filetype plugin indent on
</span><span class='line'>set guifont=Courier\ 12
</span><span class='line'>set nocompatible
</span><span class='line'>let $VIMFILES=$HOME.&#39;/.vim&#39;
</span><span class='line'>map <span class="nt">&lt;F4&gt;</span> :call TitleDet()<span class="nt">&lt;cr&gt;</span>&#39;s
</span><span class='line'>function AddTitle()
</span><span class='line'>    call append(0,&quot;/*=============================================================================&quot;)
</span><span class='line'>    call append(1,&quot;#&quot;)
</span><span class='line'>    call append(2,&quot;# Author: mengdaiku - mengdaikun@gmail.com&quot;)
</span><span class='line'>    call append(3,&quot;#&quot;)
</span><span class='line'>    call append(4,&quot;# QQ : 646978600&quot;)
</span><span class='line'>    call append(5,&quot;#&quot;)
</span><span class='line'>    call append(6,&quot;# Last modified: &quot;.strftime(&quot;%Y-%m-%d %H:%M&quot;))
</span><span class='line'>    call append(7,&quot;#&quot;)
</span><span class='line'>    call append(8,&quot;# Filename: &quot;.expand(&quot;%:t&quot;))
</span><span class='line'>    call append(9,&quot;#&quot;)
</span><span class='line'>    call append(10,&quot;# Description: &quot;)
</span><span class='line'>    call append(11,&quot;#&quot;)
</span><span class='line'>    call append(12,&quot;=============================================================================*/&quot;)
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in adding the copyright.&quot; | echohl None
</span><span class='line'>endf
</span><span class='line'>&quot;更新最近修改时间和文件名
</span><span class='line'>function UpdateTitle()
</span><span class='line'>    normal m&#39;
</span><span class='line'>    execute &#39;/# *Last modified:/s@:.*$@\=strftime(&quot;:\t%Y-%m-%d %H:%M&quot;)@&#39;
</span><span class='line'>    normal &#39;&#39;
</span><span class='line'>    normal mk
</span><span class='line'>    execute &#39;/# *Filename:/s@:.*$@\=&quot;:\t\t&quot;.expand(&quot;%:t&quot;)@&#39;
</span><span class='line'>    execute &quot;noh&quot;
</span><span class='line'>    normal &#39;k
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in updating the copy right.&quot; | echohl None
</span><span class='line'>endfunction
</span><span class='line'>&quot;判断前10行代码里面，是否有Last modified这个单词，
</span><span class='line'>&quot;如果没有的话，代表没有添加过作者信息，需要新添加；
</span><span class='line'>&quot;如果有的话，那么只需要更新即可
</span><span class='line'>function TitleDet()
</span><span class='line'>    let n=1
</span><span class='line'>    &quot;默认为添加
</span><span class='line'>    while n <span class="nt">&lt; 10</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">line =</span><span class="err"> </span><span class="s">getline(n)</span>
</span><span class='line'>        <span class="na">if</span> <span class="na">line =</span><span class="s">~</span> <span class="err">&#39;^\#\</span><span class="na">s</span><span class="err">*\</span><span class="na">S</span><span class="err">*</span><span class="na">Last</span><span class="err">\</span><span class="na">smodified:</span><span class="err">\</span><span class="na">S</span><span class="err">*.*$&#39;</span>
</span><span class='line'>            <span class="na">call</span> <span class="na">UpdateTitle</span><span class="err">()</span>
</span><span class='line'>            <span class="na">return</span>
</span><span class='line'>        <span class="na">endif</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">n =</span><span class="err"> </span><span class="s">n</span> <span class="err">+</span> <span class="na">1</span>
</span><span class='line'>    <span class="na">endwhile</span>
</span><span class='line'>    <span class="na">call</span> <span class="na">AddTitle</span><span class="err">()</span>
</span><span class='line'><span class="na">endfunction</span>
</span><span class='line'><span class="na">map</span> <span class="err">&lt;</span><span class="na">F3</span><span class="nt">&gt;</span> :call TitleDet1()<span class="nt">&lt;cr&gt;</span>&#39;s
</span><span class='line'>function AddTitle1()
</span><span class='line'>    call append(0,&quot;#/*=============================================================================&quot;)
</span><span class='line'>    call append(1,&quot;#&quot;)
</span><span class='line'>    call append(2,&quot;# Author: mengdaikun - mengdaikun@gmail.com&quot;)
</span><span class='line'>    call append(3,&quot;#&quot;)
</span><span class='line'>    call append(4,&quot;# QQ : 646978600&quot;)
</span><span class='line'>    call append(5,&quot;#&quot;)
</span><span class='line'>    call append(6,&quot;# Last modified: &quot;.strftime(&quot;%Y-%m-%d %H:%M&quot;))
</span><span class='line'>    call append(7,&quot;#&quot;)
</span><span class='line'>    call append(8,&quot;# Filename: &quot;.expand(&quot;%:t&quot;))
</span><span class='line'>    call append(9,&quot;#&quot;)
</span><span class='line'>    call append(10,&quot;# Description: &quot;)
</span><span class='line'>    call append(11,&quot;#&quot;)
</span><span class='line'>    call append(12,&quot;#=============================================================================*/&quot;)
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in adding the copyright.&quot; | echohl None
</span><span class='line'>endf
</span><span class='line'>&quot;更新最近修改时间和文件名
</span><span class='line'>function UpdateTitle1()
</span><span class='line'>    normal m&#39;
</span><span class='line'>    execute &#39;/# *Last modified:/s@:.*$@\=strftime(&quot;:\t%Y-%m-%d %H:%M&quot;)@&#39;
</span><span class='line'>    normal &#39;&#39;
</span><span class='line'>    normal mk
</span><span class='line'>    execute &#39;/# *Filename:/s@:.*$@\=&quot;:\t\t&quot;.expand(&quot;%:t&quot;)@&#39;
</span><span class='line'>    execute &quot;noh&quot;
</span><span class='line'>    normal &#39;k
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in updating the copy right.&quot; | echohl None
</span><span class='line'>endfunction
</span><span class='line'>&quot;判断前10行代码里面，是否有Last modified这个单词，
</span><span class='line'>&quot;如果没有的话，代表没有添加过作者信息，需要新添加；
</span><span class='line'>&quot;如果有的话，那么只需要更新即可
</span><span class='line'>function TitleDet1()
</span><span class='line'>    let n=1
</span><span class='line'>    &quot;默认为添加
</span><span class='line'>    while n <span class="nt">&lt; 10</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">line =</span><span class="err"> </span><span class="s">getline(n)</span>
</span><span class='line'>        <span class="na">if</span> <span class="na">line =</span><span class="s">~</span> <span class="err">&#39;^\#\</span><span class="na">s</span><span class="err">*\</span><span class="na">S</span><span class="err">*</span><span class="na">Last</span><span class="err">\</span><span class="na">smodified:</span><span class="err">\</span><span class="na">S</span><span class="err">*.*$&#39;</span>
</span><span class='line'>            <span class="na">call</span> <span class="na">UpdateTitle1</span><span class="err">()</span>
</span><span class='line'>            <span class="na">return</span>
</span><span class='line'>        <span class="na">endif</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">n =</span><span class="err"> </span><span class="s">n</span> <span class="err">+</span> <span class="na">1</span>
</span><span class='line'>    <span class="na">endwhile</span>
</span><span class='line'>    <span class="na">call</span> <span class="na">AddTitle1</span><span class="err">()</span>
</span><span class='line'><span class="na">endfunction</span>
</span><span class='line'><span class="na">map</span> <span class="err">&lt;</span><span class="na">F2</span><span class="nt">&gt;</span> :call TitleDet2()<span class="nt">&lt;cr&gt;</span>&#39;s
</span><span class='line'>function AddTitle2()
</span><span class='line'>    call append(0,&quot;&#39;&#39;&#39;/*=============================================================================&quot;)
</span><span class='line'>    call append(1,&quot;#&quot;)
</span><span class='line'>    call append(2,&quot;# Author: mengdaikun - mengdaikun@gmail.com&quot;)
</span><span class='line'>    call append(3,&quot;#&quot;)
</span><span class='line'>    call append(4,&quot;# QQ : 646978600&quot;)
</span><span class='line'>    call append(5,&quot;#&quot;)
</span><span class='line'>    call append(6,&quot;# Last modified: &quot;.strftime(&quot;%Y-%m-%d %H:%M&quot;))
</span><span class='line'>    call append(7,&quot;#&quot;)
</span><span class='line'>    call append(8,&quot;# Filename: &quot;.expand(&quot;%:t&quot;))
</span><span class='line'>    call append(9,&quot;#&quot;)
</span><span class='line'>    call append(10,&quot;# Description: &quot;)
</span><span class='line'>    call append(11,&quot;#&quot;)
</span><span class='line'>    call append(12,&quot;=============================================================================*/&#39;&#39;&#39;&quot;)
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in adding the copyright.&quot; | echohl None
</span><span class='line'>endf
</span><span class='line'>&quot;更新最近修改时间和文件名
</span><span class='line'>function UpdateTitle2()
</span><span class='line'>    normal m&#39;
</span><span class='line'>    execute &#39;/# *Last modified:/s@:.*$@\=strftime(&quot;:\t%Y-%m-%d %H:%M&quot;)@&#39;
</span><span class='line'>    normal &#39;&#39;
</span><span class='line'>    normal mk
</span><span class='line'>    execute &#39;/# *Filename:/s@:.*$@\=&quot;:\t\t&quot;.expand(&quot;%:t&quot;)@&#39;
</span><span class='line'>    execute &quot;noh&quot;
</span><span class='line'>    normal &#39;k
</span><span class='line'>    echohl WarningMsg | echo &quot;Successful in updating the copy right.&quot; | echohl None
</span><span class='line'>endfunction
</span><span class='line'>&quot;判断前10行代码里面，是否有Last modified这个单词，
</span><span class='line'>&quot;如果没有的话，代表没有添加过作者信息，需要新添加；
</span><span class='line'>&quot;如果有的话，那么只需要更新即可
</span><span class='line'>function TitleDet2()
</span><span class='line'>    let n=1
</span><span class='line'>    &quot;默认为添加
</span><span class='line'>    while n <span class="nt">&lt; 10</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">line =</span><span class="err"> </span><span class="s">getline(n)</span>
</span><span class='line'>        <span class="na">if</span> <span class="na">line =</span><span class="s">~</span> <span class="err">&#39;^\#\</span><span class="na">s</span><span class="err">*\</span><span class="na">S</span><span class="err">*</span><span class="na">Last</span><span class="err">\</span><span class="na">smodified:</span><span class="err">\</span><span class="na">S</span><span class="err">*.*$&#39;</span>
</span><span class='line'>            <span class="na">call</span> <span class="na">UpdateTitle2</span><span class="err">()</span>
</span><span class='line'>            <span class="na">return</span>
</span><span class='line'>        <span class="na">endif</span>
</span><span class='line'>        <span class="na">let</span> <span class="na">n =</span><span class="err"> </span><span class="s">n</span> <span class="err">+</span> <span class="na">1</span>
</span><span class='line'>    <span class="na">endwhile</span>
</span><span class='line'>    <span class="na">call</span> <span class="na">AddTitle2</span><span class="err">()</span>
</span><span class='line'><span class="na">endfunction</span>
</span><span class='line'><span class="na">set</span> <span class="na">t_Co=</span><span class="s">256</span>
</span><span class='line'><span class="na">colorscheme</span> <span class="na">darkburn</span>
</span><span class='line'><span class="na">let</span> <span class="na">g:SuperTabRetainCompletionType=</span><span class="s">2</span>
</span><span class='line'><span class="na">let</span> <span class="na">g:SuperTabDefaultCompletionType=</span><span class="s">&quot;&lt;C-X&gt;&lt;C-O&gt;&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux内核启动流程]]></title>
    <link href="http://mdkvimer.github.io/blog/2013/05/19/linuxnei-he-qi-dong-liu-cheng/"/>
    <updated>2013-05-19T11:09:00+08:00</updated>
    <id>http://mdkvimer.github.io/blog/2013/05/19/linuxnei-he-qi-dong-liu-cheng</id>
    <content type="html"><![CDATA[<p>启动流程一览</p>

<p>既然启动是很严肃的一件事，那我们就来了解一下整个启动的过程吧！ 好让大家比较容易发现启动过程里面可能会发生问题的地方，以及出现问题后的解决之道！ 不过，由於启动的过程中，那个启动管理程序 (Boot Loader) 使用的软件可能不一样，例如目前各大 Linux distributions 的主流为 grub，但早期 Linux 默认是使用 LILO 。 但无论如何，我们总是得要了解整个 boot loader 的工作情况，才能了解为何进行多重启动的配置时， 老是听人家讲要先安装 Windows 再安装 Linux 的原因～</p>

<p>假设以个人计算机架设的 Linux 主机为例 ， 当你按下电源按键后计算机硬件会主动的读取 BIOS 来加载硬件资讯及进行硬件系统的自我测试， 之后系统会主动的去读取第一个可启动的装置 (由 BIOS 配置的) ，此时就可以读入启动管理程序了。</p>

<p>启动管理程序可以指定使用哪个核心文件来启动，并实际加载核心到内存当中解压缩与运行， 此时核心就能够开始在内存内活动，并侦测所有硬件资讯与加载适当的驱动程序来使整部主机开始运行， 等到核心侦测硬件与加载驱动程序完毕后，一个最阳春的操作系统就开始在你的 PC 上面跑了。</p>

<p>主机系统开始运行后，此时 Linux 才会呼叫外部程序开始准备软件运行的环境， 并且实际的加载所有系统运行所需要的软件程序哩！最后系统就会开始等待你的登陆与操作啦！ 简单来说，系统启动的经过可以汇整成底下的流程的：</p>

<pre><code>加载 BIOS 的硬件资讯与进行自我测试，并依据配置取得第一个可启动的装置；
读取并运行第一个启动装置内 MBR 的 boot Loader (亦即是 grub, spfdisk 等程序)；
依据 boot loader 的配置加载 Kernel ，Kernel 会开始侦测硬件与加载驱动程序；
</code></pre>

<p>BIOS, 启动自我测试与 MBR</p>

<p>在个人计算机架构下，你想要启动整部系统首先就得要让系统去加载 BIOS (Basic Input Output System)，并透过 BIOS 程序去加载 CMOS 的资讯，并且藉由 CMOS 内的配置值取得主机的各项硬件配置， 例如 CPU 与周边设备的沟通时脉啊、启动装置的搜寻顺序啊、硬盘的大小与类型啊、 系统时间啊、各周边汇流排的是否启动 Plug and Play (PnP, 随插即用装置) 啊、 各周边设备的 I/O 位址啊、以及与 CPU 沟通的 IRQ 岔断等等的资讯。</p>

<p>在取得这些资讯后，BIOS 还会进行启动自我测试 (Power-on Self Test, POST) 。 然后开始运行硬件侦测的初始化，并配置 PnP 装置，之后再定义出可启动的装置顺序， 接下来就会开始进行启动装置的数据读取了 (MBR 相关的任务开始)。</p>

<p>由於我们的系统软件大多放置到硬盘中嘛！所以 BIOS 会指定启动的装置好让我们可以读取磁碟中的操作系统核心文件。 但由於不同的操作系统他的文件系统格式不相同，因此我们必须要以一个启动管理程序来处理核心文件加载 (load) 的问题， 因此这个启动管理程序就被称为 Boot Loader 了。那这个 Boot Loader 程序安装在哪里呢？就在启动装置的第一个磁区 (sector) 内，也就是我们一直谈到的 MBR (Master Boot Record, 主要启动记录区)。</p>

<p>那你会不会觉得很奇怪啊？既然核心文件需要 loader 来读取，那每个操作系统的 loader 都不相同， 这样的话 BIOS 又是如何读取 MBR 内的 loader 呢？很有趣的问题吧！其实 BIOS 是透过硬件的 INT 13 中断功能来读取 MBR 的，也就是说，只要 BIOS 能够侦测的到你的磁碟 (不论该磁碟是 SATA 还是 IDE 介面)，那他就有办法透过 INT 13 这条通道来读取该磁碟的第一个磁区内的 MBR 啦！这样 boot loader 也就能够被运行罗！</p>

<p>我们知道每颗硬盘的第一个磁区内含有 446 bytes的 MBR 区域，那么如果我的主机上面有两颗硬盘的话， 系统会去哪颗硬盘的 MBR 读取 boot loader 呢？这个就得要看 BIOS 的配置了。 基本上，我们常常讲的『系统的 MBR』其实指的是 第一个启动装置的 MBR 才对！ 所以，改天如果你要将启动管理程序安装到某颗硬盘的 MBR 时， 要特别注意当时系统的『第一个启动装置』是哪个，否则会安装到错误的硬盘上面的 MBR 喔！
Boot Loader</p>

<p>刚刚说到 Loader 的最主要功能是要认识操作系统的文件格式并据以加载核心到主内存中去运行。 由於不同操作系统的文件格式不一致，因此每种操作系统都有自己的 boot loader 啦！用自己的 loader 才有办法加载核心文件嘛！那问题就来啦，你应该有听说过多重操作系统吧？也就是在一部主机上面安装多种不同的操作系统。 既然你 (1)必须要使用自己的 loader 才能够加载属於自己的操作系统核心，而 (2)系统的 MBR 只有一个，那你怎么会有办法同时在一部主机上面安装 Windows 与 Linux 呢？</p>

<p>其实每个文件系统 (filesystem, 或者是 partition) 都会保留一块启动磁区 (boot sector) 提供操作系统安装 boot loader ， 而通常操作系统默认都会安装一份 loader 到他根目录所在的文件系统的 boot sector 上。如果我们在一部主机上面安装 Windows 与 Linux 后，该 boot sector, boot loader 与 MBR 的相关性会有点像下图：</p>

<p>图 1.2.1、 boot loader 安装在 MBR, boot sector 与操作系统的关系
如上图所示，每个操作系统默认是会安装一套 boot loader 到他自己的文件系统中 (就是每个 filesystem 左下角的方框)，而在 Linux 系统安装时，你可以选择将 boot loader 安装到 MBR 去，也可以选择不安装。 如果选择安装到 MBR 的话，那理论上你在 MBR 与 boot sector 都会保有一份 boot loader 程序的。 至於 Windows 安装时，他默认会主动的将 MBR 与 boot sector 都装上一份 boot loader！所以啦， 你会发现安装多重操作系统时，你的 MBR 常常会被不同的操作系统的 boot loader 所覆盖啦！ ^^</p>

<p>我们刚刚提到的两个问题还是没有解决啊！虽然各个操作系统都可以安装一份 boot loader 到他们的 boot sector 中， 这样操作系统可以透过自己的 boot loader 来加载核心了。问题是系统的 MBR 只有一个哩！ 你要怎么运行 boot sector 里面的 loader 啊？</p>

<p>boot loader 主要的功能如下</p>

<pre><code>提供菜单：使用者可以选择不同的启动项目，这也是多重启动的重要功能！
加载核心文件：直接指向可启动的程序区段来开始操作系统；
转交其他 loader：将启动管理功能转交给其他 loader 负责。
</code></pre>

<p>由於具有菜单功能，因此我们可以选择不同的核心来启动。而由於具有控制权转交的功能，因此我们可以加载其他 boot sector 内的 loader 啦！不过 Windows 的 loader 默认不具有控制权转交的功能，因此你不能使用 Windows 的 loader 来加载 Linux 的 loader 喔！这也是为啥第三章谈到 MBR 与多重启动时，会特别强调先装 Windows 再装 Linux 的缘故。 我们将上述的三个功能以底下的图示来解释你就看的懂了！(与第三章的图示也非常类似啦！)</p>

<p>图 1.2.2、 启动管理程序的菜单功能与控制权转交功能示意图
如上图所示，我的 MBR 使用 Linux 的 grub 这个启动管理程序，并且里面假设已经有了三个菜单， 第一个菜单可以直接指向 Linux 的核心文件并且直接加载核心来启动；第二个菜单可以将启动管理程序控制权交给 Windows 来管理，此时 Windows 的 loader 会接管启动流程，这个时候他就能够启动 windows 了。第三个菜单则是使用 Linux 在 boot sector 内的启动管理程序，此时就会跳出另一个 grub 的菜单啦！了解了吗？</p>

<p>而最终 boot loader 的功能就是『加载 kernel 文件』啦！</p>

<p>加载核心侦测硬件与 initrd</p>

<p>当我们藉由 boot loader 的管理而开始读取核心文件后，接下来， Linux 就会将核心解压缩到主内存当中， 并且利用核心的功能，开始测试与驱动各个周边装置，包括储存装置、CPU、网络卡、声卡等等。 此时 Linux 核心会以自己的功能重新侦测一次硬件，而不一定会使用 BIOS 侦测到的硬件资讯喔！也就是说，核心此时才开始接管 BIOS 后的工作了。 那么核心文件在哪里啊？一般来说，他会被放置到 /boot 里面，并且取名为 /boot/vmlinuz 才对！
<code>
[root@www ~]# ls --format=single-column -F /boot
config-2.6.18-92.el5      &lt;==此版本核心被编译时选择的功能与模块配置档
grub/                     &lt;==就是启动管理程序 grub 相关数据目录
initrd-2.6.18-92.el5.img  &lt;==虚拟文件系统档！
System.map-2.6.18-92.el5  &lt;==核心功能放置到内存位址的对应表
vmlinuz-2.6.18-92.el5     &lt;==就是核心文件啦！最重要者！
</code>
从上表我们也可以知道此版本的 Linux 核心为 2.6.18-92.el5 这个版本！为了硬件开发商与其他核心功能开发者的便利， 因此 Linux 核心是可以透过动态加载核心模块的 (就请想成驱动程序即可)，这些核心模块就放置在 /lib/modules/ 目录内。 由于模块放置到磁盘根目录内 (要记得 /lib 不可以与 / 分别放在不同的 partition ！)， 因此在启动的过程中核心必须要挂载根目录，这样才能够读取核心模块提供加载驱动程序的功能。 而且为了担心影响到磁碟内的文件系统，因此启动过程中根目录是以唯读的方式来挂载的喔。</p>

<p>一般来说，非必要的功能且可以编译成为模块的核心功能，目前的 Linux distributions 都会将他编译成为模块。 因此 U盘, SATA, SCSI… 等磁碟装置的驱动程序通常都是以模块的方式来存在的。 现在来思考一种情况，假设你的 linux 是安装在 SATA 磁碟上面的，你可以透过 BIOS 的 INT 13 取得 boot loader 与 kernel 文件来启动，然后 kernel 会开始接管系统并且侦测硬件及尝试挂载根目录来取得额外的驱动程序。</p>

<p>问题是，核心根本不认识 SATA 磁碟，所以需要加载 SATA 磁碟的驱动程序， 否则根本就无法挂载根目录。但是 SATA 的驱动程序在 /lib/modules 内，你根本无法挂载根目录又怎么读取到 /lib/modules/ 内的驱动程序？是吧！非常的两难吧！在这个情况之下，你的 Linux 是无法顺利启动的！ 那怎办？没关系，我们可以透过虚拟文件系统来处理这个问题。</p>

<p>虚拟文件系统 (Initial RAM Disk) 一般使用的档名为 /boot/initrd ，这个文件的特色是，他也能够透过 boot loader 来加载到内存中， 然后这个文件会被解压缩并且在内存当中模拟成一个根目录， 且此模拟在内存当中的文件系统能够提供一支可运行的程序，透过该程序来加载启动过程中所最需要的核心模块， 通常这些模块就是 U盘, RAID, LVM, SCSI 等文件系统与磁碟介面的驱动程序啦！等加载完成后， 会帮助核心重新呼叫 /sbin/init 来开始后续的正常启动流程。</p>

<p>如上图所示，boot loader 可以加载 kernel 与 initrd ，然后在内存中让 initrd 解压缩成为根目录， kernel 就能够藉此加载适当的驱动程序，最终释放虚拟文件系统，并挂载实际的根目录文件系统， 就能够开始后续的正常启动流程。更详细的 initrd 说明，你可以自行使用 man initrd 去查阅看看。 底下让我们来了解一下 CentOS 5.x 的 initrd 文件内容有什么吧！</p>

<p><code>
[root@www ~]# mkdir /tmp/initrd
[root@www ~]# cp /boot/initrd-2.6.18-92.el5.img /tmp/initrd/
[root@www ~]# cd /tmp/initrd
[root@www initrd]# file initrd-2.6.18-92.el5.img
initrd-2.6.18-92.el5.img: gzip compressed data, ...
</code></p>

<p><code>
[root@www initrd]# mv initrd-2.6.18-92.el5.img initrd-2.6.18-92.el5.gz
[root@www initrd]# gzip -d initrd-2.6.18-92.el5.gz
[root@www initrd]# file initrd-2.6.18-92.el5
initrd-2.6.18-92.el5: ASCII cpio archive (SVR4 with no CRC)
</code></p>

<p><code>
[root@www initrd]# cpio -ivcdu &lt; initrd-2.6.18-92.el5
[root@www initrd]# ll
drwx------ 2 root root    4096 Apr 10 02:05 bin
drwx------ 3 root root    4096 Apr 10 02:05 dev
drwx------ 2 root root    4096 Apr 10 02:05 etc
-rwx------ 1 root root    1888 Apr 10 02:05 init
-rw------- 1 root root 5408768 Apr 10 02:00 initrd-2.6.18-92.el5
drwx------ 3 root root    4096 Apr 10 02:05 lib
drwx------ 2 root root    4096 Apr 10 02:05 proc
lrwxrwxrwx 1 root root       3 Apr 10 02:05 sbin -&gt; bin
drwx------ 2 root root    4096 Apr 10 02:05 sys
drwx------ 2 root root    4096 Apr 10 02:05 sysroot
</code>
<code>
[root@www initrd]# cat init
</code></p>

<p>```</p>

<h1>!/bin/nash</h1>

<p>mount -t proc /proc /proc    挂载内存的虚拟文件系统
&hellip;.(中间省略)&hellip;.
echo Creating initial device nodes
mknod /dev/null c 1 3        创建系统所需要的各项装置！
&hellip;.(中间省略)&hellip;.
echo &ldquo;Loading ehci-hcd.ko module&rdquo;
insmod /lib/ehci-hcd.ko      加载各项核心模块，就是驱动程序！
&hellip;.(中间省略)&hellip;.
echo Creating root device.
mkrootdev -t ext3 -o defaults,ro hdc2 尝试挂载根目录啦！
&hellip;.(底下省略)&hellip;.
```</p>

<p>透过上述运行档的内容，我们可以知道 initrd 有加载模块并且尝试挂载了虚拟文件系统。 接下来就能够顺利的运行啦！那么是否一定需要 initrd 呢？</p>

<p>是否没有 initrd 就无法顺利启动？
答：
不见得的！需要 initrd 最重要的原因是，当启动时无法挂载根目录的情况下， 此时就一定需要 initrd ，例如你的根目录在特殊的磁碟介面 (U盘, SATA, SCSI) ， 或者是你的文件系统较为特殊 (LVM, RAID) 等等，才会需要 initrd。</p>

<p>如果你的 Linux 是安装在 IDE 介面的磁碟上，并且使用默认的 ext2/ext3 文件系统， 那么不需要 initrd 也能够顺利的启动进入 Linux 的！</p>

<p>在核心完整的加载后，您的主机应该就开始正确的运行了</p>

<p>转自 <a href="http://vbird.dic.ksu.edu.tw/linux_basic/0510osloader_1.php">http://vbird.dic.ksu.edu.tw/linux_basic/0510osloader_1.php</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux系统调用列表]]></title>
    <link href="http://mdkvimer.github.io/blog/2013/05/19/linuxxi-tong-diao-yong-lie-biao/"/>
    <updated>2013-05-19T11:08:00+08:00</updated>
    <id>http://mdkvimer.github.io/blog/2013/05/19/linuxxi-tong-diao-yong-lie-biao</id>
    <content type="html"><![CDATA[<p>以下是Linux系统调用的一个列表，包含了大部分常用系统调用和由系统调用派生出的的函数。这可能是你在互联网上所能看到的唯一一篇中文注释的Linux系统调用列表，即使是简单的字母序英文列表，能做到这么完全也是很罕见的。</p>

<p>按照惯例，这个列表以man pages第2节，即系统调用节为蓝本。按照笔者的理解，对其作了大致的分类，同时也作了一些小小的修改，删去了几个仅供内核使用，不允许用户调用的系统调用，对个别本人稍觉不妥的地方作了一些小的修改，并对所有列出的系统调用附上简要注释。</p>

<p>其中有一些函数的作用完全相同，只是参数不同。（可能很多熟悉C++朋友马上就能联想起函数重载，但是别忘了Linux核心是用C语言写的，所以只 能取成不同的函数名）。还有一些函数已经过时，被新的更好的函数所代替了（gcc在链接这些函数时会发出警告），但因为兼容的原因还保留着，这些函数我会 在前面标上星号以示区别。</p>

<p>一、进程控制：</p>

<p><code>
fork    创建一个新进程
clone   按指定条件创建子进程
execve  运行可执行文件
exit    中止进程
_exit   立即中止当前进程
getdtablesize   进程所能打开的最大文件数
getpgid     获取指定进程组标识号
setpgid     设置指定进程组标志号
getpgrp     获取当前进程组标识号
setpgrp     设置当前进程组标志号
getpid  获取进程标识号
getppid     获取父进程标识号
getpriority     获取调度优先级
setpriority     设置调度优先级
modify_ldt  读写进程的本地描述表
nanosleep   使进程睡眠指定的时间
nice    改变分时进程的优先级
pause   挂起进程，等待信号
personality     设置进程运行域
prctl   对进程进行特定操作
ptrace  进程跟踪
sched_get_priority_max  取得静态优先级的上限
sched_get_priority_min  取得静态优先级的下限
sched_getparam  取得进程的调度参数
sched_getscheduler  取得指定进程的调度策略
sched_rr_get_interval   取得按RR算法调度的实时进程的时间片长度
sched_setparam  设置进程的调度参数
sched_setscheduler  设置指定进程的调度策略和参数
sched_yield     进程主动让出处理器,并将自己等候调度队列队尾
vfork   创建一个子进程，以供执行新程序，常与execve等同时使用
wait    等待子进程终止
wait3   参见wait
waitpid     等待指定子进程终止
wait4   参见waitpid
capget  获取进程权限
capset  设置进程权限
getsid  获取会晤标识号
setsid  设置会晤标识号
</code>
二、文件系统控制
<code>
1、文件读写操作
fcntl   文件控制
open    打开文件
creat   创建新文件
close   关闭文件描述字
read    读文件
write   写文件
readv   从文件读入数据到缓冲数组中
writev  将缓冲数组里的数据写入文件
pread   对文件随机读
pwrite  对文件随机写
lseek   移动文件指针
_llseek     在64位地址空间里移动文件指针
dup     复制已打开的文件描述字
dup2    按指定条件复制文件描述字
flock   文件加/解锁
poll    I/O多路转换
truncate    截断文件
ftruncate   参见truncate
umask   设置文件权限掩码
fsync   把文件在内存中的部分写回磁盘
</code>
2、文件系统操作
<code>
access  确定文件的可存取性
chdir   改变当前工作目录
fchdir  参见chdir
chmod   改变文件方式
fchmod  参见chmod
chown   改变文件的属主或用户组
fchown  参见chown
lchown  参见chown
chroot  改变根目录
stat    取文件状态信息
lstat   参见stat
fstat   参见stat
statfs  取文件系统信息
fstatfs     参见statfs
readdir     读取目录项
getdents    读取目录项
mkdir   创建目录
mknod   创建索引节点
rmdir   删除目录
rename  文件改名
link    创建链接
symlink     创建符号链接
unlink  删除链接
readlink    读符号链接的值
mount   安装文件系统
umount  卸下文件系统
ustat   取文件系统信息
utime   改变文件的访问修改时间
utimes  参见utime
quotactl    控制磁盘配额
</code></p>

<p>三、系统控制</p>

<p><code>
ioctl   I/O总控制函数
_sysctl     读/写系统参数
acct    启用或禁止进程记账
getrlimit   获取系统资源上限
setrlimit   设置系统资源上限
getrusage   获取系统资源使用情况
uselib  选择要使用的二进制函数库
ioperm  设置端口I/O权限
iopl    改变进程I/O权限级别
outb    低级端口操作
reboot  重新启动
swapon  打开交换文件和设备
swapoff     关闭交换文件和设备
bdflush     控制bdflush守护进程
sysfs   取核心支持的文件系统类型
sysinfo     取得系统信息
adjtimex    调整系统时钟
alarm   设置进程的闹钟
getitimer   获取计时器值
setitimer   设置计时器值
gettimeofday    取时间和时区
settimeofday    设置时间和时区
stime   设置系统日期和时间
time    取得系统时间
times   取进程运行时间
uname   获取当前UNIX系统的名称、版本和主机等信息
vhangup     挂起当前终端
nfsservctl  对NFS守护进程进行控制
vm86    进入模拟8086模式
create_module   创建可装载的模块项
delete_module   删除可装载的模块项
init_module     初始化模块
query_module    查询模块信息
get_kernel_syms     取得核心符号,已被query_module代替
</code>
四、内存管理
<code>
brk     改变数据段空间的分配
sbrk    参见brk
mlock   内存页面加锁
munlock     内存页面解锁
mlockall    调用进程所有内存页面加锁
munlockall  调用进程所有内存页面解锁
mmap    映射虚拟内存页
munmap  去除内存页映射
mremap  重新映射虚拟内存地址
msync   将映射内存中的数据写回磁盘
mprotect    设置内存映像保护
getpagesize     获取页面大小
sync    将内存缓冲区数据写回硬盘
cacheflush  将指定缓冲区中的内容写回磁盘
</code></p>

<p>五、网络管理
<code>
getdomainname   取域名
setdomainname   设置域名
gethostid   获取主机标识号
sethostid   设置主机标识号
gethostname     获取本主机名称
sethostname     设置主机名称
</code></p>

<p>六、socket控制</p>

<p><code>
socketcall  socket系统调用
socket  建立socket
bind    绑定socket到端口
connect     连接远程主机
accept  响应socket连接请求
send    通过socket发送信息
sendto  发送UDP信息
sendmsg     参见send
recv    通过socket接收信息
recvfrom    接收UDP信息
recvmsg     参见recv
listen  监听socket端口
select  对多路同步I/O进行轮询
shutdown    关闭socket上的连接
getsockname     取得本地socket名字
getpeername     获取通信对方的socket名字
getsockopt  取端口设置
setsockopt  设置端口参数
sendfile    在文件或端口间传输数据
socketpair  创建一对已联接的无名socket
</code>
七、用户管理
<code>
getuid  获取用户标识号
setuid  设置用户标志号
getgid  获取组标识号
setgid  设置组标志号
getegid     获取有效组标识号
setegid     设置有效组标识号
geteuid     获取有效用户标识号
seteuid     设置有效用户标识号
setregid    分别设置真实和有效的的组标识号
setreuid    分别设置真实和有效的用户标识号
getresgid   分别获取真实的,有效的和保存过的组标识号
setresgid   分别设置真实的,有效的和保存过的组标识号
getresuid   分别获取真实的,有效的和保存过的用户标识号
setresuid   分别设置真实的,有效的和保存过的用户标识号
setfsgid    设置文件系统检查时使用的组标识号
setfsuid    设置文件系统检查时使用的用户标识号
getgroups   获取后补组标志清单
setgroups   设置后补组标志清单
</code></p>

<p>八、进程间通信</p>

<p><code>
ipc     进程间通信总控制调用
</code></p>

<p>1、信号</p>

<p><code>
sigaction   设置对指定信号的处理方法
sigprocmask     根据参数对信号集中的信号执行阻塞/解除阻塞等操作
sigpending  为指定的被阻塞信号设置队列
sigsuspend  挂起进程等待特定信号
signal  参见signal
kill    向进程或进程组发信号
*sigblock   向被阻塞信号掩码中添加信号,已被sigprocmask代替
*siggetmask     取得现有阻塞信号掩码,已被sigprocmask代替
*sigsetmask     用给定信号掩码替换现有阻塞信号掩码,已被sigprocmask代替
*sigmask    将给定的信号转化为掩码,已被sigprocmask代替
*sigpause   作用同sigsuspend,已被sigsuspend代替
sigvec  为兼容BSD而设的信号处理函数,作用类似sigaction
ssetmask    ANSI C的信号处理函数,作用类似sigaction
</code></p>

<p>2、消息</p>

<p><code>
msgctl  消息控制操作
msgget  获取消息队列
msgsnd  发消息
msgrcv  取消息
</code></p>

<p>3、管道</p>

<p><code>
pipe    创建管道
</code></p>

<p>4、信号量</p>

<p><code>
semctl  信号量控制
semget  获取一组信号量
semop   信号量操作
</code></p>

<p>5、共享内存</p>

<p><code>
shmctl  控制共享内存
shmget  获取共享内存
shmat   连接共享内存
shmdt   拆卸共享内存
</code></p>

<p>转自:<a href="http://www.ibm.com/developerworks/cn/linux/kernel/syscall/part1/appendix.html">http://www.ibm.com/developerworks/cn/linux/kernel/syscall/part1/appendix.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux内存动态分区管理]]></title>
    <link href="http://mdkvimer.github.io/blog/2013/05/19/linuxnei-cun-dong-tai-fen-qu-guan-li/"/>
    <updated>2013-05-19T11:04:00+08:00</updated>
    <id>http://mdkvimer.github.io/blog/2013/05/19/linuxnei-cun-dong-tai-fen-qu-guan-li</id>
    <content type="html"><![CDATA[<p>mycode</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (memblockman.c)</span> <a href='/downloads/code/memblockman.c'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * =====================================================================================</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *       Filename:  memblockman.c</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *    Description:  memory control</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *        Version:  1.0</span>
</span><span class='line'><span class="cm"> *        Created:  2012年12月31日 14时21分14秒</span>
</span><span class='line'><span class="cm"> *       Revision:  none</span>
</span><span class='line'><span class="cm"> *       Compiler:  gcc</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *         Author:  ACman mdk (Orz Linux Sir Koma linyu zhujiajun), mdk@server.example.com</span>
</span><span class='line'><span class="cm"> *        Company:  ACM 309 JudgeOnline</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * =====================================================================================</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cm">/*进入程序后可以根据菜单项进入不同的模块*/</span>
</span><span class='line'><span class="cm">/*1.使用首次适应算法分配空间            */</span>
</span><span class='line'><span class="cm">/*2.使用最佳适应算法分配空间            */</span>
</span><span class='line'><span class="cm">/*3.释放一块内存空间                    */</span>
</span><span class='line'><span class="cm">/*4.显示内存分配情况                    */</span>
</span><span class='line'><span class="cm">/*5.退出系统                            */</span>
</span><span class='line'><span class="cm">/*--------------------------------------*/</span>
</span><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;sys/wait.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#define MEMSIZE 100  </span><span class="cm">/*定义内存大小为100*/</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define MINSIZE 2   </span><span class="cm">/*分配时如果剩余小于此值则不再分配*/</span><span class="cp"></span>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">MemoryInformation</span><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">start</span><span class="p">;</span> <span class="cm">/*开始的地址*/</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">size</span><span class="p">;</span> <span class="cm">/*大小*/</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">info</span><span class="p">;</span> <span class="cm">/*状态:f空闲(FREE):&#39;u&#39;占用(USED):&#39;e&#39;表结束(END)*/</span>
</span><span class='line'><span class="p">}</span><span class="n">MEMINFO</span><span class="p">;</span>
</span><span class='line'><span class="n">MEMINFO</span> <span class="n">MemList</span><span class="p">[</span><span class="n">MEMSIZE</span><span class="p">];</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">Display</span><span class="p">();</span>
</span><span class='line'><span class="cm">/*-----------------------*/</span>
</span><span class='line'><span class="cm">/*函数名：InitAll()      */</span>
</span><span class='line'><span class="cm">/*功能:初始化所有变量    */</span>
</span><span class='line'><span class="cm">/*-----------------------*/</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">InitAll</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="n">MEMINFO</span> <span class="n">temp</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="sc">&#39;e&#39;</span><span class="p">};</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MEMSIZE</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">temp</span><span class="p">;</span>
</span><span class='line'>  <span class="n">MemList</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">MemList</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span> <span class="o">=</span> <span class="n">MEMSIZE</span><span class="p">;</span>
</span><span class='line'>  <span class="n">MemList</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;f&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*--------------------------------*/</span>
</span><span class='line'><span class="cm">/*函数名:FirstFit_new()          */</span>
</span><span class='line'><span class="cm">/*功能：使用首次适应算法分配内存*/</span>
</span><span class='line'><span class="cm">/*------------------------------*/</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">FirstFit_new</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'> <span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;How MAny MEMORY do you require?&quot;</span><span class="p">);</span>
</span><span class='line'> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">size</span><span class="p">);</span>
</span><span class='line'> <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">MEMSIZE</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">!=</span><span class="sc">&#39;e&#39;</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">&gt;=</span> <span class="n">size</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">==</span><span class="sc">&#39;f&#39;</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span> <span class="o">&lt;=</span> <span class="n">MINSIZE</span><span class="p">)</span>
</span><span class='line'>        <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">=</span><span class="sc">&#39;u&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span><span class="p">{</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">MEMSIZE</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span><span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">;</span><span class="n">j</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>       <span class="n">MemList</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">start</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">start</span> <span class="o">+</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">size</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;f&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">MEMSIZE</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">==</span> <span class="sc">&#39;e&#39;</span><span class="p">){</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NOT Enough Memory!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">getchar</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">Display</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*------------------------------*/</span>
</span><span class='line'><span class="cm">/*函数名：BestFit_new()         */</span>
</span><span class='line'><span class="cm">/*功能：使用最佳适应算法分配内存*/</span>
</span><span class='line'><span class="cm">/*------------------------------*/</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">BestFit_new</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">flag</span><span class="p">,</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;How Many MEMORY require?&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">size</span><span class="p">);</span>
</span><span class='line'>  <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">k</span> <span class="o">=</span> <span class="n">MEMSIZE</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MEMSIZE</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">!=</span><span class="sc">&#39;e&#39;</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>   <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">&gt;=</span> <span class="n">size</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">==</span> <span class="sc">&#39;f&#39;</span><span class="p">){</span>
</span><span class='line'>    <span class="n">flag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">&lt;</span> <span class="n">k</span><span class="p">){</span>
</span><span class='line'>     <span class="n">k</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>     <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">i</span><span class="o">=</span><span class="n">j</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">flag</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NOT ENOUGH Memory!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">getchar</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span> <span class="o">&lt;=</span> <span class="n">MINSIZE</span><span class="p">)</span>
</span><span class='line'>      <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">else</span><span class="p">{</span>
</span><span class='line'>   <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">MEMSIZE</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">;</span><span class="n">j</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>    <span class="n">MemList</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="n">MemList</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">start</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">start</span> <span class="o">+</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;f&#39;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">Display</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*------------------------*/</span>
</span><span class='line'><span class="cm">/*函数名：del()          */</span>
</span><span class='line'><span class="cm">/*功能:释放一块内存      */</span>
</span><span class='line'><span class="cm">/*-----------------------*/</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">del</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">number</span><span class="p">;</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;please input the NUMBER you want to delete:&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">number</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="p">].</span><span class="n">info</span> <span class="o">==</span> <span class="sc">&#39;u&#39;</span><span class="p">){</span>
</span><span class='line'>   <span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="p">].</span><span class="n">info</span> <span class="o">=</span> <span class="sc">&#39;f&#39;</span><span class="p">;</span>
</span><span class='line'>   <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">info</span><span class="o">==</span><span class="sc">&#39;f&#39;</span><span class="p">){</span>
</span><span class='line'>    <span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="p">].</span><span class="n">size</span> <span class="o">+=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">number</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MEMSIZE</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">!=</span><span class="sc">&#39;e&#39;</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>            <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">number</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">info</span> <span class="o">!=</span> <span class="sc">&#39;f&#39;</span><span class="p">){</span>
</span><span class='line'>    <span class="n">MemList</span><span class="p">[</span><span class="n">number</span> <span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="n">size</span> <span class="o">+=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">number</span><span class="p">].</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">number</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MEMSIZE</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span><span class="o">!=</span><span class="sc">&#39;e&#39;</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>            <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span><span class="p">{</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;This number is NOT exits or is NOT sued!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="n">getchar</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">Display</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*---------------------------*/</span>
</span><span class='line'><span class="cm">/*函数名:Display()           */</span>
</span><span class='line'><span class="cm">/*功能:显示内存状态          */</span>
</span><span class='line'><span class="cm">/*---------------------------*/</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">Display</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">used</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">------------------------------------------</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%5s %15s %15s&quot;</span><span class="p">,</span><span class="s">&quot;Number&quot;</span><span class="p">,</span><span class="s">&quot;Start&quot;</span><span class="p">,</span><span class="s">&quot;Size&quot;</span><span class="p">,</span><span class="s">&quot;info&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">------------------------------------------</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MEMSIZE</span> <span class="o">&amp;&amp;</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">!=</span> <span class="sc">&#39;e&#39;</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">==</span> <span class="sc">&#39;u&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">used</span><span class="o">+=</span> <span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%5d %15d %15d %15s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">start</span><span class="p">,</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">,</span><span class="n">MemList</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">info</span> <span class="o">==</span> <span class="sc">&#39;u&#39;</span><span class="o">?</span><span class="s">&quot;USED&quot;</span><span class="o">:</span><span class="s">&quot;FREE&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">------------------------------------------</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;TotalSize : %-10d Used: %-10d Free:%-10d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">MEMSIZE</span><span class="p">,</span><span class="n">used</span><span class="p">,</span><span class="n">MEMSIZE</span> <span class="o">-</span> <span class="n">used</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n\n</span><span class="s">Press Any Key to Return</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">getchar</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*----------------*/</span>
</span><span class='line'><span class="cm">/*函数名;main()   */</span>
</span><span class='line'><span class="cm">/*功能:主函数     */</span>
</span><span class='line'><span class="cm">/*----------------*/</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>  <span class="n">InitAll</span><span class="p">();</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;   Memory manager  </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;================================================</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;1. Get a block use the FIRSTFIT method</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;2. Get a block use the BESTFFIT method</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;3. Free or delete a block</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;4. Display Mem information</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;5. Exit</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;================================================</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ch</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">();</span>
</span><span class='line'>    <span class="k">switch</span><span class="p">(</span><span class="n">ch</span><span class="p">){</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;1&#39;</span>:
</span><span class='line'>            <span class="n">FirstFit_new</span><span class="p">();</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;2&#39;</span>:
</span><span class='line'>            <span class="n">BestFit_new</span><span class="p">();</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;3&#39;</span>:
</span><span class='line'>            <span class="n">del</span><span class="p">();</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;4&#39;</span>:
</span><span class='line'>            <span class="n">Display</span><span class="p">();</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;5&#39;</span>:
</span><span class='line'>            <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svn]]></title>
    <link href="http://mdkvimer.github.io/blog/2013/05/19/svn/"/>
    <updated>2013-05-19T11:00:00+08:00</updated>
    <id>http://mdkvimer.github.io/blog/2013/05/19/svn</id>
    <content type="html"><![CDATA[<p>用开源OJ后<del>由于开源~内核也开源</del>给了我们很大的改造空间<del>~由此搭建起subversion版本控制</del>subversion的安装略（可yum 或apt-get 安装或者源码安装）~安装成功后使用命令 svn –version 即可显示安装版本信息</p>

<p>本人使用是svnserve 建立版本库~基于apaches的有空再弄~</p>

<ol>
<li>建立版本目录:
<code>
svnadmin create –fs-type fsfs /usr/local/OJ
</code>
执行后在/usr/local/OJ/目录下生成一堆配置文件~主要文件还是conf/下的svnserve.conf文件，里面有关配置用户和匿名用户对版本库的使用权限设置 anon-access 和autho-access ,write对应的用户读写都可~read只可读</li>
</ol>


<p>2.刚建立的版本库没有项目需引入项目(在本地引入用file://)
<code>
svn import hustoj2mdk file:///usr/local/OJ/project-oj -m “Initial import”
</code>
即可将hustoj2mdk目录的内容引入到版本库的project-oj目录</p>

<p>3.开启svnserve
```
svnserve -d -r /usr/local/OJ</p>

<p>-d 以独立进程的方式开启 -r 便于svn 访问省略/usr/local/OJ  只用project-oj即可
<code>
</code>
ps aux|grep svn 即可查看到svnserve
```</p>

<p>到此一个的版本库的项目引入以完成~即可用 svn list/checkout等命令 svn://URL 取出版本库的相关项目(后期补上基于apche的svn)</p>
]]></content>
  </entry>
  
</feed>
